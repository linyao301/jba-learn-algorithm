package com.jba.learn.algorithm.bigData;

/**
 * <pre>
 *   只用2GB内存在20亿个整数中找到出现次数最多的数
 *   【题目】有一个包含20亿个全是32位整数的大文件，
 *   在其中找到出现次数最多的数。
 *   【要求】内存限制为2GB。
 * </pre>
 */
public class GetMaxTimesNum {

  public void answer() {
    /**
     * 把包含20亿个数的大文件用哈希函数分成16个小文件，
     * 根据哈希函数的性质，同一种数不可能被散列到不同的小文件上，
     * 同时每个小文件中不同的数一定不会大于2亿种，
     * 假设哈希函数足够优秀。
     * 然后对每一个小文件用哈希表来统计其中每种数出现的次数，
     * 这样我们就得到了 16 个小文件中各自出现次数最多的数，
     * 还有各自的次数统计。
     * 接下来只要选出这16个小文件各自的第一名中谁出现的次数最多即可。
     * 把一个大的集合通过哈希函数分配到多台机器中，
     * 或者分配到多个文件里，这种技巧是处理大数据面试题时最常用的技巧之一。
     * 但是到底分配到多少台机器、分配到多少个文件，在解题时一定要确定下来。
     * 可能是在与面试官沟通的过程中由面试官指定，也可能是根据具体的限制来确定，
     * 比如本题确定分成16个文件，就是根据内存限制2GB的条件来确定的。
     */
  }

}
